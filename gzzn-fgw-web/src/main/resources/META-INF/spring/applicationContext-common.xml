<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.gzzn.common.persist" />
	<context:component-scan base-package="com.gzzn.fgw" />
	<context:component-scan base-package="com.gzzn.fgw.service" />

	<bean id="smsConfig" class="com.gzzn.fgw.service.SmsConfig" scope="singleton" />
	
	<!-- 预加载配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties,classpath:fgwproject.properties,classpath:sms.properties,classpath:META-INF/config/*.properties" />		
	
	<!-- 数据源配置, 使用应用中的DBCP数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	
		<!-- Connection Pooling Info -->
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="defaultAutoCommit" value="false" />
		<!-- 连接Idle一个小时后超时 -->
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>
	
	<!-- 数据源配置, 使用应用中的DBCP数据库连接池 -->
	 <bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
            <property name="driverClassName" value="com.mysql.jdbc.Driver" />
            <property name="url" value="jdbc:mysql://172.16.28.5:3306/mas?characterEncoding=gb2312&amp;zeroDateTimeBehavior=convertToNull" />
            <property name="username" value="FGWGovInfo" />
            <property name="password" value="FGWGovInfo" />
            <property name="maxActive" value="15" />
            <property name="maxIdle" value="1"/>
            <property name="maxWait" value="1000"/>
            <property name="defaultAutoCommit" value="true"/>
            <property name="removeAbandoned" value="true"/>
			<property name="removeAbandonedTimeout" value="60000"/>
        </bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<bean id="jdbcTemplate2" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource2"></property>
	</bean>


	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="dataSource"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan" value="com.gzzn.fgw.model"/>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<!-- 
				<prop key="net.sf.ehcache.configurationResourceName">META-INF/cache/ehcache-hibernate-local.xml</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				 -->
			</props>
		</property>
	</bean>
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	<!-- Spring Data Jpa配置 -->
 	<jpa:repositories base-package="com.gzzn.fgw.persist" transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory" />

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
		
	<!-- 使用AspectJ方式配置AOP -->
    <aop:aspectj-autoproxy proxy-target-class="true" />
    
    <!-- 调度器任务配置 -->
    <!--<bean id="syncUserJobDetail" class="com.gzzn.fgw.quartz.CronJobDetail">
		<property name="targetObject" ref="syncUserJob" />
		<property name="targetMethod" value="execute" />
		<property name="cronExpression" value="${sync.user.cron}" />
	</bean>

	<bean id="autoNoticeJobDetail" class="com.gzzn.fgw.quartz.CronJobDetail">
		<property name="targetObject" ref="autoNoticeJob" />
		<property name="targetMethod" value="execute" />
		<property name="cronExpression" value="${auto.notice.cron}" />
	</bean>-->
	
	<bean id="clearupTempFileJobDetail" class="com.gzzn.fgw.quartz.CronJobDetail">
		<property name="targetObject" ref="clearupTempFileJob" />
		<property name="targetMethod" value="execute" />
		<property name="cronExpression" value="${clearup.temp.cron}" />
	</bean>
</beans>